/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 0.001;


// necessary variables
radiusI 5; // inner solid radius in mm
radiusM 7; // outer solid radius in mm
radiusA 15;   // outer fluid radius in mm
length -4500;  //mm
xa 5;   // Netzfeinheit radiale Richtung
ya 10;  // Netzfeinheit Umfangsrichtung
yb 15;  // Netzfeinheit Umfangsrichtung
za 200; // Netzfeinheit in Rohrrichtung

// automatically calculated values
c1p #calc "0.30*$radiusI*sin(degToRad(45.0))";
c2p #calc "0.70*$radiusI*sin(degToRad(45.0))";
c3p #calc "1.00*$radiusI*sin(degToRad(45.0))";
c4p #calc "1.00*$radiusM*sin(degToRad(45.0))";
c5p #calc "1.00*$radiusA*sin(degToRad(45.0))";
c1n #calc "-1.0*$c1p";
c2n #calc "-1.0*$c2p";
c3n #calc "-1.0*$c3p";
c4n #calc "-1.0*$c4p";
c5n #calc "-1.0*$c5p";

PRI #calc "0.25*$radiusI";
NRI #calc "-1.0*$PRI";

PRM #calc "0.70*$radiusI";
NRM #calc "-1.0*$PRM";

PRA #calc "1.00*$radiusI";
NRA #calc "-1.0*$PRA"; 

PRS #calc "1.00*$radiusM";
NRS #calc "-1.0*$PRS"; 

PRB #calc "1.00*$radiusA";
NRB #calc "-1.0*$PRB"; 

   vertices
   (
    // fluidA 
    ($c1n $c1n $length) // 0 
    ($c1p $c1n $length) // 1 
    ($c1p $c1p $length) // 2 
    ($c1n $c1p $length) // 3 

    ($c2n $c2n $length) // 4 
    ($c2p $c2n $length) // 5    
    ($c2p $c2p $length) // 6 
    ($c2n $c2p $length) // 7 

    ($c3n $c3n $length) // 8 
    ($c3p $c3n $length) // 9    
    ($c3p $c3p $length) // 10 
    ($c3n $c3p $length) // 11
     
    ($c1n $c1n 0) // 12       
    ($c1p $c1n 0) // 13
    ($c1p $c1p 0) // 14 
    ($c1n $c1p 0) // 15 
 
    ($c2n $c2n 0) // 16
    ($c2p $c2n 0) // 17    
    ($c2p $c2p 0) // 18
    ($c2n $c2p 0) // 19

    ($c3n $c3n 0) // 20
    ($c3p $c3n 0) // 21     
    ($c3p $c3p 0) // 22
    ($c3n $c3p 0) // 23   
    //solid
    ($c4n $c4n $length) // 24
    ($c4p $c4n $length) // 25   
    ($c4p $c4p $length) // 26 
    ($c4n $c4p $length) // 27  
    
    ($c4n $c4n 0) // 28
    ($c4p $c4n 0) // 29     
    ($c4p $c4p 0) // 30
    ($c4n $c4p 0) // 31    
    // fluidB
    ($c5n $c5n $length) // 32 
    ($c5p $c5n $length) // 33   
    ($c5p $c5p $length) // 34 
    ($c5n $c5p $length) // 35  
    
    ($c5n $c5n 0) // 36
    ($c5p $c5n 0) // 37     
    ($c5p $c5p 0) // 38
    ($c5n $c5p 0) // 39     
   );				

   blocks
   (
    //fluidA Inner 
    hex (0  1  2  3 12 13 14 15) fluidA  ($ya $ya $za) simpleGrading (1 1 1)
    hex (0  4  5  1 12 16 17 13) fluidA  ($xa $ya $za) simpleGrading (1 1 1)
    hex (2  6  7  3 14 18 19 15) fluidA  ($xa $ya $za) simpleGrading (1 1 1)
    hex (1  5  6  2 13 17 18 14) fluidA  ($xa $ya $za) simpleGrading (1 1 1)
    hex (3  7  4  0 15 19 16 12) fluidA  ($xa $ya $za) simpleGrading (1 1 1)    
    // fluidA Boundary Layer
    hex (9  5  4  8 21 17 16 20) fluidA  ($ya $ya $za) simpleGrading (10 1 1)    
    hex (11 7  6 10 23 19 18 22) fluidA  ($ya $ya $za) simpleGrading (10 1 1)    
    hex (10 6  5  9 22 18 17 21) fluidA  ($ya $ya $za) simpleGrading (10 1 1) 
    hex (8  4  7 11 20 16 19 23) fluidA  ($ya $ya $za) simpleGrading (10 1 1)     
    // solid
    hex (25 9  8  24 29 21 20 28) solid  ($xa $ya $za) simpleGrading (1 1 1)    
    hex (26 10 9  25 30 22 21 29) solid  ($xa $ya $za) simpleGrading (1 1 1)    
    hex (27 11 10 26 31 23 22 30) solid  ($xa $ya $za) simpleGrading (1 1 1) 
    hex (24 8  11 27 28 20 23 31) solid  ($xa $ya $za) simpleGrading (1 1 1)  
    // fluidB
    hex (33 25 24 32 37 29 28 36) fluidB ($yb $ya $za) simpleGrading (0.12 1 1)    
    hex (34 26 25 33 38 30 29 37) fluidB ($yb $ya $za) simpleGrading (0.12 1 1)    
    hex (35 27 26 34 39 31 30 38) fluidB ($yb $ya $za) simpleGrading (0.12 1 1) 
    hex (32 24 27 35 36 28 31 39) fluidB ($yb $ya $za) simpleGrading (0.12 1 1)    
   );

   edges
   ( 
    // fluidA
    arc 0 1 	(0    $NRI $length)
    arc 1 2 	($PRI 0    $length)
    arc 2 3 	(0    $PRI $length)
    arc 3 0 	($NRI 0    $length) 

    arc 4 5 	(0    $NRM $length)
    arc 5 6 	($PRM 0    $length) 
    arc 6 7 	(0    $PRM $length)
    arc 7 4 	($NRM 0    $length)
    
    arc 8 9 	(0    $NRA $length)
    arc 9 10 	($PRA 0    $length)
    arc 10 11 	(0    $PRA $length)
    arc 11 8 	($NRA 0    $length)   
   
    arc 12 13 	(0    $NRI 0)
    arc 13 14 	($PRI 0    0)
    arc 14 15 	(0    $PRI 0)
    arc 15 12 	($NRI 0    0)

    arc 16 17 	(0    $NRM 0)
    arc 17 18 	($PRM 0    0)
    arc 18 19 	(0    $PRM 0)
    arc 19 16 	($NRM 0    0)
    
    arc 20 21 	(0    $NRA 0)
    arc 21 22 	($PRA 0    0)
    arc 22 23 	(0    $PRA 0)
    arc 23 20 	($NRA 0    0)
    // solid
    arc 28 29 	(0    $NRS 0)
    arc 29 30 	($PRS 0    0)
    arc 30 31 	(0    $PRS 0)
    arc 31 28 	($NRS 0    0)    
    
    arc 24 25 	(0    $NRS $length)
    arc 25 26 	($PRS 0    $length)
    arc 26 27 	(0    $PRS $length)
    arc 27 24 	($NRS 0    $length)     
    // fluidB
    arc 36 37 	(0    $NRB 0)
    arc 37 38 	($PRB 0    0)
    arc 38 39 	(0    $PRB 0)
    arc 39 36 	($NRB 0    0)    
    
    arc 32 33 	(0    $NRB $length)
    arc 33 34 	($PRB 0    $length)
    arc 34 35 	(0    $PRB $length)
    arc 35 32 	($NRB 0    $length)     
   );
   
defaultPatch
{
    name walls;
    type wall;
}   

boundary
(
    inlet
    {
        type patch;
        faces
        (
         (0  1  2  3 )
         (4  5  1  0 )
         (3  2  6  7 )
	 (4  0  3  7 )
	 (1  5  6  2 )
         (10 6  7  11)
         (9  5  6  10)
         (8  9  5  4 )
         (8  4  7  11)
	 (39 31 30 38)	
	 (38 30 29 37)	
	 (37 29 28 36)	
	 (36 28 31 39)		 
        );
    } 
    outlet
    {
        type patch;
        faces
        (
	 (13 12 15 14)		 
	 (17 16 12 13)
	 (12 16 19 15)
	 (17 13 14 18)
	 (14 15 19 18)	
	 (23 19 18 22)
	 (20 16 19 23)
	 (21 17 16 20)
	 (22 18 17 21)
	 (35 27 24 32)	
	 (32 24 25 33)	
	 (33 25 26 34)	
	 (34 35 27 26)	
	);
    }        
);
